/*********************************************************************************/
/********** THIS FILE IS GENERATED BY TOUCHGFX DESIGNER, DO NOT MODIFY ***********/
/*********************************************************************************/
#ifndef DIGITAL_CLOCKBASE_HPP
#define DIGITAL_CLOCKBASE_HPP

#include <gui/common/FrontendApplication.hpp>
#include <touchgfx/containers/Container.hpp>
#include <touchgfx/containers/clock/DigitalClock.hpp>
#include <touchgfx/widgets/Button.hpp>

class Digital_ClockBase : public touchgfx::Container
{
public:
    Digital_ClockBase();
    virtual ~Digital_ClockBase() {}
    virtual void initialize();

    /*
     * Custom Trigger Callback Setters
     */
    void setTouch_ClockCallback(touchgfx::GenericCallback<>& callback)
    {
        this->Touch_ClockCallback = &callback;
    }

protected:
    FrontendApplication& application() {
        return *static_cast<FrontendApplication*>(touchgfx::Application::getInstance());
    }

    /*
     * Custom Trigger Emitters
     */
    virtual void emitTouch_ClockCallback()
    {
        if (Touch_ClockCallback && Touch_ClockCallback->isValid())
        {
            this->Touch_ClockCallback->execute();
        }
    }

    /*
     * Member Declarations
     */
    touchgfx::DigitalClock digitalClock;
    touchgfx::Button Clock_Back;

private:

    /*
     * Callback Declarations
     */
    touchgfx::Callback<Digital_ClockBase, const touchgfx::AbstractButton&> buttonCallback;

    /*
     * Custom Trigger Callback Declarations
     */
    touchgfx::GenericCallback<>* Touch_ClockCallback;

    /*
     * Callback Handler Declarations
     */
    void buttonCallbackHandler(const touchgfx::AbstractButton& src);

};

#endif // DIGITAL_CLOCKBASE_HPP
