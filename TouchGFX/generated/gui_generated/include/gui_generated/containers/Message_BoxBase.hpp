/*********************************************************************************/
/********** THIS FILE IS GENERATED BY TOUCHGFX DESIGNER, DO NOT MODIFY ***********/
/*********************************************************************************/
#ifndef MESSAGE_BOXBASE_HPP
#define MESSAGE_BOXBASE_HPP

#include <gui/common/FrontendApplication.hpp>
#include <touchgfx/containers/Container.hpp>
#include <touchgfx/widgets/Image.hpp>
#include <touchgfx/widgets/ButtonWithLabel.hpp>
#include <touchgfx/widgets/TextAreaWithWildcard.hpp>

class Message_BoxBase : public touchgfx::Container
{
public:
    Message_BoxBase();
    virtual ~Message_BoxBase() {}
    virtual void initialize();

    /*
     * Custom Actions
     */
    virtual void Set_Text(char* value);

    /*
     * Virtual Action Handlers
     */
    virtual void Button_CallBack()
    {
        // Override and implement this function in Message_Box
    }

protected:
    FrontendApplication& application() {
        return *static_cast<FrontendApplication*>(touchgfx::Application::getInstance());
    }

    /*
     * Member Declarations
     */
    touchgfx::Image BackGround;
    touchgfx::ButtonWithLabel Center_Btn;
    touchgfx::TextAreaWithOneWildcard Message_Text;

    /*
     * Wildcard Buffers
     */
    static const uint16_t MESSAGE_TEXT_SIZE = 30;
    touchgfx::Unicode::UnicodeChar Message_TextBuffer[MESSAGE_TEXT_SIZE];

private:

    /*
     * Callback Declarations
     */
    touchgfx::Callback<Message_BoxBase, const touchgfx::AbstractButton&> buttonCallback;

    /*
     * Callback Handler Declarations
     */
    void buttonCallbackHandler(const touchgfx::AbstractButton& src);

};

#endif // MESSAGE_BOXBASE_HPP
