// 4.17.0 0x415f18c6
// Generated by imageconverter. Please, do not edit!

#include <BitmapDatabase.hpp>
#include <touchgfx/Bitmap.hpp>

extern const unsigned char image_bat_symb_charging[]; // BITMAP_BAT_SYMB_CHARGING_ID = 0, Size: 45x22 pixels
extern const unsigned char image_battery_symbol[]; // BITMAP_BATTERY_SYMBOL_ID = 1, Size: 45x22 pixels
extern const unsigned char image_battery_symbol_stroked[]; // BITMAP_BATTERY_SYMBOL_STROKED_ID = 2, Size: 45x22 pixels
extern const unsigned char image_button_filled[]; // BITMAP_BUTTON_FILLED_ID = 3, Size: 126x60 pixels
extern const unsigned char image_button_filled_small[]; // BITMAP_BUTTON_FILLED_SMALL_ID = 4, Size: 126x30 pixels
extern const unsigned char image_button_hollow[]; // BITMAP_BUTTON_HOLLOW_ID = 5, Size: 126x60 pixels
extern const unsigned char image_button_hollow_gray[]; // BITMAP_BUTTON_HOLLOW_GRAY_ID = 6, Size: 126x60 pixels
extern const unsigned char image_clock_transparent[]; // BITMAP_CLOCK_TRANSPARENT_ID = 7, Size: 65x25 pixels
extern const unsigned char image_fw412_splashscreenlogo[]; // BITMAP_FW412_SPLASHSCREENLOGO_ID = 8, Size: 272x66 pixels
extern const unsigned char image_message_box_background[]; // BITMAP_MESSAGE_BOX_BACKGROUND_ID = 9, Size: 250x130 pixels
extern const unsigned char image_scroll_back[]; // BITMAP_SCROLL_BACK_ID = 10, Size: 50x50 pixels
extern const unsigned char image_scroll_back_test[]; // BITMAP_SCROLL_BACK_TEST_ID = 11, Size: 50x50 pixels
extern const unsigned char image_title[]; // BITMAP_TITLE_ID = 12, Size: 270x28 pixels
extern const unsigned char image_usb_symbol[]; // BITMAP_USB_SYMBOL_ID = 13, Size: 63x29 pixels

const touchgfx::Bitmap::BitmapData bitmap_database[] = {
    { image_bat_symb_charging, 0, 45, 22, 2, 0, 37, ((uint8_t)touchgfx::Bitmap::ARGB8888) >> 3, 22, ((uint8_t)touchgfx::Bitmap::ARGB8888) & 0x7 },
    { image_battery_symbol, 0, 45, 22, 2, 1, 36, ((uint8_t)touchgfx::Bitmap::ARGB8888) >> 3, 20, ((uint8_t)touchgfx::Bitmap::ARGB8888) & 0x7 },
    { image_battery_symbol_stroked, 0, 45, 22, 0, 1, 40, ((uint8_t)touchgfx::Bitmap::ARGB8888) >> 3, 20, ((uint8_t)touchgfx::Bitmap::ARGB8888) & 0x7 },
    { image_button_filled, 0, 126, 60, 2, 1, 122, ((uint8_t)touchgfx::Bitmap::ARGB8888) >> 3, 58, ((uint8_t)touchgfx::Bitmap::ARGB8888) & 0x7 },
    { image_button_filled_small, 0, 126, 30, 5, 0, 116, ((uint8_t)touchgfx::Bitmap::ARGB8888) >> 3, 30, ((uint8_t)touchgfx::Bitmap::ARGB8888) & 0x7 },
    { image_button_hollow, 0, 126, 60, 5, 0, 116, ((uint8_t)touchgfx::Bitmap::ARGB8888) >> 3, 2, ((uint8_t)touchgfx::Bitmap::ARGB8888) & 0x7 },
    { image_button_hollow_gray, 0, 126, 60, 5, 0, 116, ((uint8_t)touchgfx::Bitmap::ARGB8888) >> 3, 2, ((uint8_t)touchgfx::Bitmap::ARGB8888) & 0x7 },
    { image_clock_transparent, 0, 65, 25, 0, 0, 0, ((uint8_t)touchgfx::Bitmap::ARGB8888) >> 3, 0, ((uint8_t)touchgfx::Bitmap::ARGB8888) & 0x7 },
    { image_fw412_splashscreenlogo, 0, 272, 66, 224, 21, 6, ((uint8_t)touchgfx::Bitmap::ARGB8888) >> 3, 24, ((uint8_t)touchgfx::Bitmap::ARGB8888) & 0x7 },
    { image_message_box_background, 0, 250, 130, 2, 1, 246, ((uint8_t)touchgfx::Bitmap::ARGB8888) >> 3, 128, ((uint8_t)touchgfx::Bitmap::ARGB8888) & 0x7 },
    { image_scroll_back, 0, 50, 50, 0, 1, 50, ((uint8_t)touchgfx::Bitmap::ARGB8888) >> 3, 23, ((uint8_t)touchgfx::Bitmap::ARGB8888) & 0x7 },
    { image_scroll_back_test, 0, 50, 50, 2, 1, 46, ((uint8_t)touchgfx::Bitmap::ARGB8888) >> 3, 48, ((uint8_t)touchgfx::Bitmap::ARGB8888) & 0x7 },
    { image_title, 0, 270, 28, 5, 0, 260, ((uint8_t)touchgfx::Bitmap::ARGB8888) >> 3, 28, ((uint8_t)touchgfx::Bitmap::ARGB8888) & 0x7 },
    { image_usb_symbol, 0, 63, 29, 2, 13, 57, ((uint8_t)touchgfx::Bitmap::ARGB8888) >> 3, 2, ((uint8_t)touchgfx::Bitmap::ARGB8888) & 0x7 }
};

namespace BitmapDatabase
{
const touchgfx::Bitmap::BitmapData* getInstance()
{
    return bitmap_database;
}

uint16_t getInstanceSize()
{
    return (uint16_t)(sizeof(bitmap_database) / sizeof(touchgfx::Bitmap::BitmapData));
}
} // namespace BitmapDatabase
